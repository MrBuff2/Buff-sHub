-- script made by buff--
local library = loadstring(game:HttpGet("https://raw.githubusercontent.com/miroeramaa/TurtleLib/main/TurtleUiLib.lua"))()
local window = library:Window("-Buff Hub- MiscGunTest:X")

window:Label("``Main``", Color3.fromRGB(127, 143, 166))

window:Button("Hitbox", function()
game:GetService("StarterGui"):SetCore("SendNotification", {Title = "Loaded", Text = "w = Enabled : p = disabled."})
local player = game.Players.LocalPlayer
local mouse = player:GetMouse()

-- Settings

bind = ""
bind2 = "w"
bind3 = "p"

-- Script

mouse.KeyDown:connect(function(key)
if key == bind then
player.Character.HumanoidRootPart.CFrame = CFrame.new(1254.09656, 137.906067, -172.128204)
end
end)

mouse.KeyDown:connect(function(key2)
if key2 == bind2 then
_G.HeadSize = 17
_G.Disabled = true


if _G.Disabled then
for i,v in next, game:GetService('Players'):GetPlayers() do
if v.Name ~= game:GetService('Players').LocalPlayer.Name then
pcall(function()
v.Character.HumanoidRootPart.Size = Vector3.new(_G.HeadSize,_G.HeadSize,_G.HeadSize)
v.Character.HumanoidRootPart.Transparency = 0.7
v.Character.HumanoidRootPart.BrickColor = BrickColor.new("Bright red")
v.Character.HumanoidRootPart.Material = "Neon"
v.Character.HumanoidRootPart.CanCollide = false
end)
end
end
end
end
end)

mouse.KeyDown:connect(function(key3)
if key3 == bind3 then
_G.HeadSize = 17
_G.Disabled = true


for i,v in next, game:GetService('Players'):GetPlayers() do
if v.Name ~= game:GetService('Players').LocalPlayer.Name then
pcall(function()
v.Character.HumanoidRootPart.Size = Vector3.new(2, 2, 1)
v.Character.HumanoidRootPart.Transparency = 1
v.Character.HumanoidRootPart.BrickColor = BrickColor.new("Medium stone grey")
v.Character.HumanoidRootPart.Material = "Plastic"
v.Character.HumanoidRootPart.CanCollide = false
end)
end
end
end
end)
end)

window:Button("Pro Fly", function()
 game:GetService("StarterGui"):SetCore("SendNotification", {Title = "Loaded", Text = "ALT = FLY : Ctrl = Boost."})
   local Settings = {
    
    Speed = 5,
    SprintSpeed = 30,
    ToggleKey = Enum.KeyCode.LeftAlt,
    SprintKey = Enum.KeyCode.LeftControl,
    
    ForwardKey = Enum.KeyCode.W,
    LeftKey = Enum.KeyCode.A,
    BackwardKey = Enum.KeyCode.S,
    RightKey = Enum.KeyCode.D,
    UpKey = Enum.KeyCode.E,
    DownKey = Enum.KeyCode.Q,
    
}

local Screen = Instance.new("ScreenGui",game.CoreGui)
local Distance = Instance.new("TextLabel",Screen)
Distance.BackgroundTransparency = 1
Distance.Size = UDim2.new(0,10,0,10)
Distance.ZIndex = 2
Distance.Text = "0"
Distance.TextStrokeTransparency = .5
Distance.TextSize = 20
Distance.TextStrokeColor3 = Color3.fromRGB(33, 33, 33)
Distance.Font = Enum.Font.Gotham
Distance.TextColor3 = Color3.new(1,1,1)
Distance.TextXAlignment = Enum.TextXAlignment.Left
Distance.TextYAlignment = Enum.TextYAlignment.Top


local Mouse = game.Players.LocalPlayer:GetMouse()
local Direction = Vector3.new(0,0,0)
local InterpolatedDir = Direction
local Tilt = 0
local InterpolatedTilt = Tilt
local RunService = game:GetService("RunService")
local Toggled = false
local Sprinting = false
local CameraPos = game.Workspace.CurrentCamera.CFrame.Position

pcall(function()
    game.Players.LocalPlayer.DevCameraOcclusionMode = Enum.DevCameraOcclusionMode.Invisicam 
end)

function Lerp(a, b, t)
    return a + (b - a) * t
end

local LastPos = nil

function KeyHandler(actionName, userInputState)
    if true and game.Players.LocalPlayer.Character and game.Players.LocalPlayer.Character:FindFirstChild("HumanoidRootPart") then
        if actionName == "Toggle" and userInputState == Enum.UserInputState.Begin then
            Toggled = not Toggled
            if Toggled then
                LastPos = game.Players.LocalPlayer.Character.HumanoidRootPart.Position
                --game.Players.LocalPlayer.Character.HumanoidRootPart.Anchored = true
                game.Players.LocalPlayer.Character.Humanoid.PlatformStand = true 
            else
                LastPos = nil
                game.Players.LocalPlayer.Character.Humanoid.PlatformStand = false
                --game.Players.LocalPlayer.Character.HumanoidRootPart.Anchored = false
            end
        elseif actionName == "Forward" then
            Tilt = userInputState == Enum.UserInputState.Begin and -20 or 0
            Direction = Vector3.new(Direction.x,Direction.y,userInputState == Enum.UserInputState.Begin and -1 or 0)
        elseif actionName == "Left" then
            Direction = Vector3.new(userInputState == Enum.UserInputState.Begin and -1 or 0,Direction.y,Direction.z)
        elseif actionName == "Backward" then
            Tilt = userInputState == Enum.UserInputState.Begin and 20 or 0
            Direction = Vector3.new(Direction.x,Direction.y,userInputState == Enum.UserInputState.Begin and 1 or 0)
        elseif actionName == "Right" then
            Direction = Vector3.new(userInputState == Enum.UserInputState.Begin and 1 or 0,Direction.y,Direction.z)
        elseif actionName == "Up" then
            Direction = Vector3.new(Direction.x,userInputState == Enum.UserInputState.Begin and 1 or 0,Direction.z)
        elseif actionName == "Down" then
            Direction = Vector3.new(Direction.x,userInputState == Enum.UserInputState.Begin and -1 or 0,Direction.z)
        elseif actionName == "Sprint" then
            Sprinting = userInputState == Enum.UserInputState.Begin
        end
    end
end



game:GetService("UserInputService").InputBegan:connect(function(inputObject, gameProcessedEvent)
    
    if inputObject.KeyCode == Settings.ToggleKey then
        KeyHandler("Toggle", Enum.UserInputState.Begin, inputObject)
    elseif inputObject.KeyCode == Settings.ForwardKey then
        KeyHandler("Forward", Enum.UserInputState.Begin, inputObject)
    elseif inputObject.KeyCode == Settings.LeftKey then
        KeyHandler("Left", Enum.UserInputState.Begin, inputObject)
    elseif inputObject.KeyCode == Settings.BackwardKey then
        KeyHandler("Backward", Enum.UserInputState.Begin, inputObject)
    elseif inputObject.KeyCode == Settings.RightKey then
        KeyHandler("Right", Enum.UserInputState.Begin, inputObject)
    elseif inputObject.KeyCode == Settings.UpKey then   
        KeyHandler("Up", Enum.UserInputState.Begin, inputObject)
    elseif inputObject.KeyCode == Settings.DownKey then
        KeyHandler("Down", Enum.UserInputState.Begin, inputObject)
    elseif inputObject.KeyCode == Settings.SprintKey then
        KeyHandler("Sprint", Enum.UserInputState.Begin, inputObject)
    end
    
    
end)


game:GetService("UserInputService").InputEnded:connect(function(inputObject, gameProcessedEvent)
    
    if inputObject.KeyCode == Settings.ToggleKey then
        KeyHandler("Toggle", Enum.UserInputState.End, inputObject)
    elseif inputObject.KeyCode == Settings.ForwardKey then
        KeyHandler("Forward", Enum.UserInputState.End, inputObject)
    elseif inputObject.KeyCode == Settings.LeftKey then
        KeyHandler("Left", Enum.UserInputState.End, inputObject)
    elseif inputObject.KeyCode == Settings.BackwardKey then
        KeyHandler("Backward", Enum.UserInputState.End, inputObject)
    elseif inputObject.KeyCode == Settings.RightKey then
        KeyHandler("Right", Enum.UserInputState.End, inputObject)
    elseif inputObject.KeyCode == Settings.UpKey then   
        KeyHandler("Up", Enum.UserInputState.End, inputObject)
    elseif inputObject.KeyCode == Settings.DownKey then
        KeyHandler("Down", Enum.UserInputState.End, inputObject)
    elseif inputObject.KeyCode == Settings.SprintKey then
        KeyHandler("Sprint", Enum.UserInputState.End, inputObject)
    end
    
    
end)


RunService.RenderStepped:Connect(function()
    if Toggled and game.Players.LocalPlayer.Character and game.Players.LocalPlayer.Character:FindFirstChild("HumanoidRootPart")  then
        for i,v in pairs(game.Players.LocalPlayer.Character:GetDescendants()) do
            if v:IsA("BasePart") then
                v.Velocity = Vector3.new(0,0,0)
            end
        end
        local RootPart = game.Players.LocalPlayer.Character.HumanoidRootPart
        if LastPos then
            Distance.Text = math.floor((LastPos-RootPart.Position).Magnitude+.5)
            if (LastPos-RootPart.Position).Magnitude >= 350 then
                Distance.TextColor3 = Color3.new(1,0,0)
            else
                Distance.TextColor3 = Color3.new(1,1,1) 
            end
        else
            Distance.TextColor3 = Color3.new(1,1,1)
            Distance.Text = 0
        end
        InterpolatedDir = InterpolatedDir:Lerp((Direction * (Sprinting and Settings.SprintSpeed or Settings.Speed)),.2)
        InterpolatedTilt = Lerp(InterpolatedTilt ,Tilt* (Sprinting and 2 or 1),Tilt == 0 and .2 or .1)
        RootPart.CFrame = RootPart.CFrame:Lerp(CFrame.new(RootPart.Position,RootPart.Position + Mouse.UnitRay.Direction) * CFrame.Angles(0,math.rad(00),0) * CFrame.new(InterpolatedDir)  * CFrame.Angles(math.rad(InterpolatedTilt),0,0),.2)
    else
        Distance.TextColor3 = Color3.new(1,1,1)
        Distance.Text = 0
    end 
end)
 
end)

window:Label("`` Teleports ``", Color3.fromRGB(127, 143, 166))

window:Button("Shop", function()
   local teleport_table = {
    location1 = Vector3.new(276.7393493652344,-11.492471694946289,-287.792236328125), -- your desired position
}

local tween_s = game:GetService('TweenService')
local tweeninfo = TweenInfo.new(1,Enum.EasingStyle.Linear)

local lp = game.Players.LocalPlayer

function bypass_teleport(v)
    if lp.Character and 
    lp.Character:FindFirstChild('HumanoidRootPart') then
        local cf = CFrame.new(v)
        local a = tween_s:Create(lp.Character.HumanoidRootPart,tweeninfo,{CFrame=cf})
        a:Play()
        -- a.Completed:Wait()
        -- print('Teleporting Done!')
    end
end

bypass_teleport(teleport_table.location1)
end)

window:Label("V 1.0.0", Color3.fromRGB(233, 0, 0))


local window2 = library:Window("Credits")
window2:Label("Buff's Discord", Color3.fromRGB(127, 143, 166))

window2:Toggle("Coppy Link", true, function(bool)
        pcall(function()
            setclipboard("https://discord.gg/u6PWdXmQZG")
            game:GetService("StarterGui"):SetCore("SendNotification", {Title = "Buff's server"; Text = "Successful! coppied"; Icon = "rbxassetid://9327507243"; Duration = 10 })
        end)
    end)
